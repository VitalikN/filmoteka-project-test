{"mappings":"AAkBOA,eAAeC,EAAYC,GAChC,IACE,MAAMC,EAAWC,MACf,2GAAiEF,gCAEnE,aAAcC,GAAUE,M,CACxB,MAAOC,GACP,OAAOC,QAAQC,IAAI,aAAcF,E,EAI9BN,eAAeS,EAAcC,GAClC,IACE,MAAMP,EAAWC,MACf,kGAAmDM,KAErD,aAAcP,GAAUE,M,CACxB,MAAOC,GACP,OAAOC,QAAQC,IAAI,aAAcF,E,EAmBrC,IAAIK,EAMG,SAASC,EAAaC,GAC3B,OAAOF,EACJG,QAAOC,GAASF,EAAUG,SAASD,EAAME,MACzCC,KAAIC,GAAQA,EAAKC,OACjBC,KAAK,K,EAfVrB,wBACqBC,KACPqB,O,CAHdC,GAQAvB,iBACE,MAAMwB,QAlBRxB,iBACE,IACE,MAAMG,EAAWC,MAAM,0FACvB,aAAcD,GAAUE,M,CACxB,MAAOC,GACP,OAAOC,QAAQC,IAAI,aAAcF,E,EAahBmB,GACnBd,EAAYa,EAAKE,M,CAHnBC,GCnDO3B,eAAe4B,EAAaC,EAAUC,GAC3C,MAAMC,EAASF,EAASG,QACtB,CAACC,GAAKC,YAAEA,EAAWC,aAAEA,EAAYtB,UAAEA,EAASI,GAAEA,EAAEmB,MAAEA,KAExCH,EAAO,kCAAkChB,8EACFiB,YAAsBE,2CACtCA,2EAHXxB,EAAaC,0DAMUwB,SAASF,sCAItD,IAEFL,EAAQQ,UAAYP,C,CAKf/B,eAAeuC,EAAeV,EAAUC,GAC7C,MAAMC,EAASF,EAASG,QACtB,CAACC,GAAKC,YAAEA,EAAWC,aAAEA,EAAYtB,UAAEA,EAASI,GAAEA,EAAEmB,MAAEA,KAExCH,EAAO,kCAAkChB,8EACFiB,YAAsBE,2CACtCA,2EAHXxB,EAAaC,0DAMUwB,SAASF,sCAItD,IAEFL,EAAQQ,UAAYP,C,CAGf/B,eAAewC,EAAoBC,EAAYC,GACpD,MAAMN,MACJA,EAAKF,YACLA,EAAWS,SACXA,EAAQ9B,UACRA,EAASI,GACTA,EAAE2B,eACFA,EAAcC,WACdA,EAAUC,WACVA,EAAUC,aACVA,GACEN,EAEEV,EAAS,+EACiBG,gEAElBE,6BACKW,8BACCD,mCACKD,uCACID,8BARThC,EAAaC,kDAWnB8B,4BACI1B,2JAMlByB,EAAcJ,UAAYP,C,CCjE5B,IAAIiB,EAEJ,MAAMC,EAASC,SAASC,cAAc,SAEhCC,EAAUF,SAASC,cAAc,YACvCC,EAAQC,iBAAiB,SAazB,SAAqBC,GACnB,MAAMC,EAAUD,EAAME,OAAOC,QAAQ,aACrC,IAAKF,EAAS,OACd,MAAMG,EAAYC,OAAOJ,EAAQK,QAAQ3C,IAEzCuB,EADmBQ,EAASa,MAAKC,GAAQA,EAAK7C,KAAOyC,IACrBK,E,IAjBlCd,EAAOI,iBAAiB,UAoBxBrD,eAAsCgE,GACpCA,EAAIC,iBACJ1D,QAAQC,IAAIwD,EAAIR,OAAOU,YAAYC,MAAMC,QACzC,MAAMlE,EAAS8D,EAAIR,OAAOU,YAAYC,MAAMC,OACtC5C,QAAavB,EAAYC,GAE/B0B,EADoBJ,EAAKF,QACC8B,E,IAxB5B,MAAMW,EAAgBb,SAASC,cAAc,qBAI7CnD,iBACE,MAAMwB,QAAaf,EAdR,GAeXuC,EAAWxB,EAAKF,QAChBiB,EAAeS,EAAUI,E,CAL3BiB","sources":["src/js/themoviedb-api-service.js","src/js/markup-service.js","src/js/filmoteka.js"],"sourcesContent":["/**\n * API ключ (v3 auth)\n * e55542ecb6aab3d889d16953eac82937\n * \n * Приклад API-запиту\n * https://api.themoviedb.org/3/movie/550?api_key=e55542ecb6aab3d889d16953eac82937\n * \n * Токен доступу для читання API (v4 auth)\neyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlNTU1NDJlY2I2YWFiM2Q4ODlkMTY5NTNlYWM4MjkzNyIsInN1YiI6IjYzY2NmY2QxOWE2NDM1MDBhZTAzODI3YiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.ZrJwlyhckYNnJMhcHP9AOOvED0EU5i-2cuiwVbINE00\n */\n\n// const API_KEY = '1174e437242bb46ea8831e578adaacd1'\nconst API_KEY = 'e55542ecb6aab3d889d16953eac82937';\nconst URL = 'https://api.themoviedb.org/3';\nconst QUERY_TRENDING = '/trending/movie/week';\nconst QUERY_GENRE = '/genre/movie/list';\nconst QUERY_SEARCH = '/search/movie';\n\nexport async function fetchSearch(search) {\n  try {\n    const responce = fetch(\n      `${URL}${QUERY_SEARCH}?api_key=${API_KEY}&language=en-US&query=${search}&page=1&include_adult=false`\n    );\n    return (await responce).json();\n  } catch (error) {\n    return console.log('error :>> ', error);\n  }\n}\n\nexport async function fetchTrending(page) {\n  try {\n    const responce = fetch(\n      `${URL}${QUERY_TRENDING}?api_key=${API_KEY}&page=${page}`\n    );\n    return (await responce).json();\n  } catch (error) {\n    return console.log('error :>> ', error);\n  }\n}\n\nasync function fetchGenre() {\n  try {\n    const responce = fetch(`${URL}${QUERY_GENRE}?api_key=${API_KEY}`);\n    return (await responce).json();\n  } catch (error) {\n    return console.log('error :>> ', error);\n  }\n}\n\ngetGenreBySearch();\nasync function getGenreBySearch() {\n  const data = await fetchSearch();\n  return data.results;\n}\n\nlet genreList;\ngetGenreList();\nasync function getGenreList() {\n  const data = await fetchGenre();\n  genreList = data.genres;\n}\nexport function getGenreById(genre_ids) {\n  return genreList\n    .filter(genre => genre_ids.includes(genre.id))\n    .map(item => item.name)\n    .join(', ');\n}\n","import { getGenreById } from './themoviedb-api-service';\n\nconst IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\n//\nexport async function markupSearch(filmList, gallery) {\n  const markup = filmList.reduce(\n    (acc, { poster_path, release_date, genre_ids, id, title }) => {\n      const genreString = getGenreById(genre_ids);\n      return (acc += `<div class=\"film-box\" data-id=\"${id}\">\n      <img class=\"filmoteka__img\" src=\"${IMAGE_URL}${poster_path}\"  alt=\"${title}\">\n      <p class=\"filmoteka__title\"> ${title}</p>\n<div  class=\"filmoteka__box\">\n      <p class=\"filmoteka__text\"> ${genreString}</p>\n      <p class=\"filmoteka__text\">&nbsp;|&nbsp; ${parseInt(release_date)}</p>\n      </div>\n      </div>`);\n    },\n    ``\n  );\n  gallery.innerHTML = markup;\n}\n\n//\n\nexport async function markupTrending(filmList, gallery) {\n  const markup = filmList.reduce(\n    (acc, { poster_path, release_date, genre_ids, id, title }) => {\n      const genreString = getGenreById(genre_ids);\n      return (acc += `<div class=\"film-box\" data-id=\"${id}\">\n      <img class=\"filmoteka__img\" src=\"${IMAGE_URL}${poster_path}\"  alt=\"${title}\">\n      <p class=\"filmoteka__title\"> ${title}</p>\n<div  class=\"filmoteka__box\">\n      <p class=\"filmoteka__text\"> ${genreString}</p>\n      <p class=\"filmoteka__text\">&nbsp;|&nbsp; ${parseInt(release_date)}</p>\n      </div>\n      </div>`);\n    },\n    ``\n  );\n  gallery.innerHTML = markup;\n}\n\nexport async function markupModalFilmInfo(targetFilm, modalFilmInfo) {\n  const {\n    title,\n    poster_path,\n    overview,\n    genre_ids,\n    id,\n    original_title,\n    popularity,\n    vote_count,\n    vote_average,\n  } = targetFilm;\n  const genreString = getGenreById(genre_ids);\n  const markup = `<div class=\"film-info\">\n         <img  src=\"${IMAGE_URL}${poster_path}\">\n         <div class=\"film-info-wrapper\">\n           <p>${title}</p>\n           <p>Vote ${vote_average}</p>\n           <p>Votes ${vote_count}</p>\n           <p>Popularity ${popularity}</p>\n           <p>Original Title ${original_title}</p>\n           <p>Genre ${genreString}</p>\n           <p>ABOUT</p>\n           <p>${overview}</p>\n           <p>id: ${id}</p>\n           <button type=\"button\">Add to watched</button>\n           <button type=\"button\">Add to queue</button>\n         </div>\n        </div>`;\n\n  modalFilmInfo.innerHTML = markup;\n}\n","import { fetchTrending, fetchSearch } from './themoviedb-api-service';\nimport {\n  markupSearch,\n  markupTrending,\n  markupModalFilmInfo,\n} from './markup-service';\n\nconst page = 1;\nlet filmList;\n\nconst formEl = document.querySelector('.form');\n\nconst gallery = document.querySelector('.gallery');\ngallery.addEventListener('click', onCardClick);\nformEl.addEventListener('submit', showGallerySearchQuery);\n\nconst modalFilmInfo = document.querySelector('.modal-film-info');\n\nshowGallery();\n\nasync function showGallery() {\n  const data = await fetchTrending(page);\n  filmList = data.results;\n  markupTrending(filmList, gallery);\n}\n\nfunction onCardClick(event) {\n  const filmBox = event.target.closest('.film-box');\n  if (!filmBox) return;\n  const filmBoxId = Number(filmBox.dataset.id);\n  const targetFilm = filmList.find(film => film.id === filmBoxId);\n  markupModalFilmInfo(targetFilm, modalFilmInfo);\n}\n\nasync function showGallerySearchQuery(evt) {\n  evt.preventDefault();\n  console.log(evt.target.searchQuery.value.trim());\n  const search = evt.target.searchQuery.value.trim();\n  const data = await fetchSearch(search);\n  const searchQuery = data.results;\n  markupSearch(searchQuery, gallery);\n}\n"],"names":["async","$dd75f990e59a30d4$export$6f539dc45dead1c","search","responce","fetch","json","error","console","log","$dd75f990e59a30d4$export$366c886a9138e8db","page","$dd75f990e59a30d4$var$genreList","$dd75f990e59a30d4$export$c19ed06c9403b25","genre_ids","filter","genre","includes","id","map","item","name","join","results","$dd75f990e59a30d4$var$getGenreBySearch","data","$dd75f990e59a30d4$var$fetchGenre","genres","$dd75f990e59a30d4$var$getGenreList","$00e5c4b3619c5131$export$556e8fc4b06516e3","filmList","gallery","markup","reduce","acc","poster_path","release_date","title","parseInt","innerHTML","$00e5c4b3619c5131$export$e3073cde6ea8798e","$00e5c4b3619c5131$export$5a4ebf6bfd514978","targetFilm","modalFilmInfo","overview","original_title","popularity","vote_count","vote_average","$c848cac843f338cf$var$filmList","$c848cac843f338cf$var$formEl","document","querySelector","$c848cac843f338cf$var$gallery","addEventListener","event","filmBox","target","closest","filmBoxId","Number","dataset","find","film","$c848cac843f338cf$var$modalFilmInfo","evt","preventDefault","searchQuery","value","trim","$c848cac843f338cf$var$showGallery"],"version":3,"file":"index.5ce91307.js.map"}